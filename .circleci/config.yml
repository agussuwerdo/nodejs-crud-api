version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: echo "No test specified in package.json"

  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build Node Project
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  deploy-vercel:
    # Deploy to Vercel
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Vercel CLI Locally
          command: npm install vercel
      - run:
          name: Deploy to Vercel
          command: VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID VERCEL_ORG_ID=$VERCEL_ORG_ID ./node_modules/.bin/vercel --token $VERCEL_TOKEN --prod --yes
      - run:
          name: Store Deployment Information
          command: |
            echo "Vercel deployment completed."

  notify-slack-success:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Debug - Print working directory
          command: pwd
      - run:
          name: Debug - List directory contents
          command: ls -al
      - run:
          name: Send Slack Notification on Sucess
          command: |
            APP_NAME=$(cat package.json | grep '"name"' | head -n 1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
            VERSION=$(cat package.json | grep '"version"' | head -n 1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
            curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Deployment of \`${APP_NAME}\`, version \`${VERSION}\` is complete.\"}" $SLACK_WEBHOOK_URL

workflows:
  test-build-and-deploy:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
          filters:
            branches:
              only:
                - main
                - master
      - deploy-vercel:
          requires:
            - build-node
          filters:
            branches:
              only:
                - main
                - master
      - notify-slack-success:
          requires:
            - deploy-vercel
          filters:
            branches:
              only:
                - main
                - master